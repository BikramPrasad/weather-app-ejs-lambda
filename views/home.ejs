<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Weather Forecast</title>
    <link
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css"
      rel="stylesheet"
    />
    <style>
      body {
          font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
          background: linear-gradient(120deg, #a1c4fd 0%, #c2e9fb 100%);
          margin: 0;
          padding: 0;
          min-height: 100vh;
          display: flex;
          justify-content: center;
          align-items: center;
      }

      .container {
          background-color: rgba(255, 255, 255, 0.9);
          border-radius: 15px;
          box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
          width: 90%;
          max-width: 600px;
          padding: 30px;
      }

      h1 {
          text-align: center;
          color: #2d3748;
          margin-bottom: 30px;
      }

      .location-box {
          text-align: center;
          margin-bottom: 20px;
      }

      #city-form {
          display: flex;
          flex-direction: column;
          gap: 15px;
      }

      .input-group {
          display: flex;
          border: 1px solid #cbd5e0;
          border-radius: 8px;
          overflow: hidden;
      }

      input[type="text"] {
          flex: 1;
          padding: 15px;
          border: none;
          font-size: 16px;
          outline: none;
      }

      button {
          background-color: #4299e1;
          color: white;
          border: none;
          padding: 12px 20px;
          cursor: pointer;
          font-size: 16px;
          font-weight: 600;
          transition: background-color 0.3s;
      }

      button:hover {
          background-color: #3182ce;
      }

      .or-divider {
          display: flex;
          align-items: center;
          margin: 20px 0;
          color: #718096;
      }

      .divider-line {
          flex: 1;
          height: 1px;
          background-color: #e2e8f0;
      }

      .divider-text {
          padding: 0 15px;
      }

      #geolocate-btn {
          background-color: #48bb78;
          display: flex;
          justify-content: center;
          align-items: center;
          gap: 8px;
      }

      #geolocate-btn:hover {
          background-color: #38a169;
      }

      .result-container {
          margin-top: 30px;
          text-align: center;
      }

      .weather-card {
          background: linear-gradient(to right, #4facfe 0%, #00f2fe 100%);
          border-radius: 10px;
          padding: 20px;
          color: white;
          margin-top: 20px;
          display: <%= locals.weather ? 'block' : 'none' %>;
      }

      .weather-icon {
          font-size: 48px;
          margin: 10px 0;
      }

      .temp {
          font-size: 42px;
          font-weight: bold;
          margin: 15px 0;
      }

      .details {
          display: flex;
          justify-content: space-around;
          margin-top: 20px;
      }

      .detail-item {
          display: flex;
          flex-direction: column;
          align-items: center;
      }

      .detail-label {
          font-size: 14px;
          opacity: 0.8;
      }

      .detail-value {
          font-size: 18px;
          font-weight: 600;
          margin-top: 5px;
      }

      .error-message {
          color: #e53e3e;
          background-color: #fed7d7;
          padding: 10px;
          border-radius: 5px;
          margin-top: 15px;
          display: <%= locals.error ? 'block' : 'none' %>;

      }

      @media (max-width: 600px) {
          .container {
              width: 95%;
              padding: 20px;
          }
      }
    </style>
  </head>
  <body>
    <div class="container">
      <h1>Weather Forecast</h1>

      <div class="location-box">
        <form id="city-form" action="/weather" method="GET">
          <div class="input-group">
            <input
              type="text"
              id="city"
              name="city"
              placeholder="Enter city name"
              value="<%= locals.city || '' %>"
              required
            />
            <button type="submit">Search</button>
          </div>

          <div class="or-divider">
            <div class="divider-line"></div>
            <span class="divider-text">OR</span>
            <div class="divider-line"></div>
          </div>

          <button type="button" id="geolocate-btn">
            <i class="fas fa-location-dot"></i> Use My Current Location
          </button>
        </form>

        <div class="error-message"><%= locals.error || '' %></div>
      </div>

      <% if (locals.weather) { %>
      <div class="result-container">
        <h2><%= weather.city %>, <%= weather.country %></h2>

        <div class="weather-card">
          <div class="weather-icon">
            <i class="fas <%= weather.icon %>"></i>
          </div>
          <div class="weather-description"><%= weather.description %></div>
          <div class="temp"><%= weather.temp %>Â°C</div>

          <div class="details">
            <div class="detail-item">
              <i class="fas fa-wind"></i>
              <span class="detail-label">Wind</span>
              <span class="detail-value"><%= weather.wind %> km/h</span>
            </div>
            <div class="detail-item">
              <i class="fas fa-tint"></i>
              <span class="detail-label">Humidity</span>
              <span class="detail-value"><%= weather.humidity %>%</span>
            </div>
            <div class="detail-item">
              <i class="fas fa-compress-arrows-alt"></i>
              <span class="detail-label">Pressure</span>
              <span class="detail-value"><%= weather.pressure %> hPa</span>
            </div>
          </div>
        </div>
      </div>
      <% } %>
    </div>

    <script>
      document
        .getElementById('geolocate-btn')
        .addEventListener('click', function () {
          if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(
              function (position) {
                const lat = position.coords.latitude;
                const lon = position.coords.longitude;
                window.location.href = `/weather?lat=${lat}&lon=${lon}`;
              },
              function (error) {
                let errorMessage = 'Unable to retrieve your location. ';

                switch (error.code) {
                  case error.PERMISSION_DENIED:
                    errorMessage += 'You denied the request for geolocation.';
                    break;
                  case error.POSITION_UNAVAILABLE:
                    errorMessage += 'Location information is unavailable.';
                    break;
                  case error.TIMEOUT:
                    errorMessage += 'The request timed out.';
                    break;
                  case error.UNKNOWN_ERROR:
                    errorMessage += 'An unknown error occurred.';
                    break;
                }

                const errorDiv = document.querySelector('.error-message');
                errorDiv.textContent = errorMessage;
                errorDiv.style.display = 'block';
              }
            );
          } else {
            const errorDiv = document.querySelector('.error-message');
            errorDiv.textContent =
              'Geolocation is not supported by this browser.';
            errorDiv.style.display = 'block';
          }
        });
    </script>
  </body>
</html>
